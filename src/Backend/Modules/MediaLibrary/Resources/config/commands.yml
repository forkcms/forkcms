services:
  # MediaFolder
  media_galleries.handler.create_media_folder:
    class: Backend\Modules\MediaLibrary\Domain\MediaFolder\Command\CreateMediaFolderHandler
    public: true
    arguments:
      - "@media_library.repository.folder"
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaFolder\Command\CreateMediaFolder }
  media_galleries.handler.delete_media_folder:
    class: Backend\Modules\MediaLibrary\Domain\MediaFolder\Command\DeleteMediaFolderHandler
    public: true
    arguments:
      - "@media_library.repository.folder"
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaFolder\Command\DeleteMediaFolder }
  media_galleries.handler.update_media_folder:
    class: Backend\Modules\MediaLibrary\Domain\MediaFolder\Command\UpdateMediaFolderHandler
    public: true
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaFolder\Command\UpdateMediaFolder }

  # MediaGroup
  media_galleries.handler.update_media_group:
    class: Backend\Modules\MediaLibrary\Domain\MediaGroup\Command\SaveMediaGroupHandler
    public: true
    arguments:
      - "@media_library.repository.item"
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaGroup\Command\SaveMediaGroup }

  # MediaItem
  media_galleries.handler.create_media_item_from_movie_url:
    class: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\CreateMediaItemFromMovieUrlHandler
    public: true
    arguments:
      - "@media_library.repository.item"
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\CreateMediaItemFromMovieUrl }
  media_galleries.handler.create_media_item_from_local_source:
    class: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\CreateMediaItemFromLocalStorageTypeHandler
    public: true
    arguments:
      - "@media_library.repository.item"
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\CreateMediaItemFromLocalStorageType }
  media_library.handler.delete_media_item:
    class: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\DeleteMediaItemHandler
    public: true
    arguments:
      - "@media_library.repository.item"
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\DeleteMediaItem }
  media_galleries.handler.update_media_item:
    class: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\UpdateMediaItemHandler
    public: true
    tags:
      - { name: command_handler, handles: Backend\Modules\MediaLibrary\Domain\MediaItem\Command\UpdateMediaItem }
