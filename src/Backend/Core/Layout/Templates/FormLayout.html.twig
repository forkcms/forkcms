{% extends 'bootstrap_4_layout.html.twig' %}

{% block form_widget_simple -%}
  {% if type is not defined or type != 'hidden' %}
    {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-control' ~ (type|default('') == 'file' ? '-file custom-file-input' : ''))|trim}) -%}
  {% endif %}
  {%- if type is defined and (type == 'range' or type == 'color') %}
    {# Attribute "required" is not supported #}
    {%- set required = false -%}
  {% endif %}
  {{- parent() -}}
  {{ block('help') }}
{%- endblock form_widget_simple %}

{%- block form_label -%}
  {% if 'checkbox' not in block_prefixes or widget_checkbox_label in ['label', 'both'] %}
    {% if label is not same as(false) %}
      {% if label is empty %}
        {% set label = id|trans({}, translation_domain)|ucfirst %}
      {% else %}
        {% set label = label|trans({}, translation_domain)|ucfirst %}
      {% endif %}
      {% if not compound %}
        {% set label_attr = label_attr|merge({'for': id}) %}
      {% endif %}
      {% set label_attr_class = '' %}
      {% if horizontal is defined and horizontal %}
        {% set label_attr_class = 'control-label ' ~ label_attr_class ~ horizontal_label_class %}
      {% endif %}
      {% set label_attr = label_attr|merge({'class': label_attr.class|default('') ~ " " ~ label_attr_class ~ (required ? ' required' : ' optional') }) %}
      <label{% for attrname,attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
      {{ label }}{% if required %}{{- block('label_asterisk') -}}{% endif %}
      </label>

    {% endif %}
  {% endif %}
{%- endblock form_label -%}

{% block checkbox_radio_label %}
  {% if widget is defined %}
    {% set label_attr = label_attr|merge({for: id, class: (label_attr.class|default('') ~ ' form-check-label')|trim}) %}
    {% if required %}
      {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}
    {% endif %}
    {% if parent_label_class is defined %}
      {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|trim}) %}
    {% endif %}
    {% if label is not same as(false) and label is empty %}
      {%- if label_format is not empty -%}
        {% set label = label_format|replace({
          '%name%': name,
          '%id%': id,
        }) %}
      {%- else -%}
        {% set label = name|humanize %}
      {%- endif -%}
    {% endif %}
    {{- widget|raw }}
    <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
      {{ label is not same as(false) ? (translation_domain is same as(false) ? label : label|trans({}, translation_domain)|ucfirst) -}}
    </label>
  {% endif %}
{% endblock checkbox_radio_label %}

{%- block label_asterisk -%}
  {% spaceless %}
    {% import 'Layout/Templates/macros.html.twig' as macro %}
    {{ macro.required }}
  {% endspaceless %}
{%- endblock label_asterisk -%}

{% block form_errors_list_content %}
  <ul class="list-unstyled">
    {%- for error in errors -%}
      <li {% if form.parent %}class="formError"{% endif %}>{{ macro.icon('exclamation-triangle') }} {{ error.message }}</li>
    {%- endfor -%}
  </ul>
{% endblock %}

{% block form_errors -%}
  {% import 'Layout/Templates/macros.html.twig' as macro %}

  {% if errors|length > 0 -%}
    {% if form.parent %}
      <small class="form-text text-muted">
        {{ block('form_errors_list_content') }}
      </small>
    {% else %}
      {{ macro.alert('danger', block('form_errors_list_content')) }}
    {% endif %}
  {%- endif %}

{%- endblock form_errors %}

{% block checkbox_enable_field_widget %}
  <checkbox-enable-field
    switch-check
    checkbox-id="{{ form.enableField.vars.id }}"
    checkbox-label="{{ form.enableField.vars.label|trans|capitalize }}"
    checkbox-name="{{ form.enableField.vars.full_name }}"
    field-id="{{ form.field.id }}"
    field-label="{{ form.field.vars.label|trans|capitalize }}"
    field-name="{{ form.field.vars.full_name }}"
    field-help-text="{{ form.field.vars.help_text|trans }}"
  ></checkbox-enable-field>
  {% do form.setRendered() %}
{% endblock %}

{%- block meta_widget -%}
  {% set customId = form.vars.id ~ '_custom' %}
  {% set classId = form.vars.id ~ '_class' %}
  {% set methodId = form.vars.id ~ '_method' %}
  {% set parametersId = form.vars.id ~ '_parameters' %}
  <div
    class="js-do-meta-automatically"
    data-base-field-selector="{{ base_field_selector }}"
    data-meta-id-selector="{{ '#' ~ form.id.vars.id }}"
    data-page-title-selector="{{ form.title.vars.id }}"
    data-meta-description-selector="{{ form.description.vars.id }}"
    data-meta-keywords-selector="{{ form.keywords.vars.id }}"
    data-url-selector="{{ '#' ~ form.url.vars.id }}"
    data-url-overwrite-selector="{{ '#' ~ form.urlOverwrite.vars.id }}"
    data-generated-url-selector="{{ form.vars.generated_url_selector }}"
    data-custom-selector="{{ '#' ~ customId }}"
    data-class-name-selector="{{ '#' ~ classId }}"
    data-method-name-selector="{{ '#' ~ methodId }}"
    data-parameters-selector="{{ '#' ~ parametersId }}"
  >
    <fieldset>
      <legend>{{ 'lbl.Titles'|trans|ucfirst }}</legend>
      <div class="checkboxTextFieldCombo">
        <checkbox-enable-field
          switch-check
          ref="{{ form.title.vars.id }}"
          checkbox-id="{{ form.titleOverwrite.vars.id }}"
          checkbox-label="{{ form.titleOverwrite.vars.label|trans|ucfirst }}"
          checkbox-name="{{ form.titleOverwrite.vars.full_name }}"
          field-id="{{ form.title.vars.id }}"
          field-label="{{ form.title.vars.label|trans|ucfirst }}"
          field-name="{{ form.title.vars.full_name }}"
          field-help-text="{{ 'msg.HelpPageTitle'|trans|raw }}"
          value-on-load="{{ form.title.vars.value }}"
          {% if form.titleOverwrite.vars.checked %} enabled-on-load {% endif %}
        >
        </checkbox-enable-field>
        {% do form.title.setRendered() %}
        {% do form.titleOverwrite.setRendered() %}
      </div>
    </fieldset>

    <fieldset>
      <legend>{{ 'lbl.MetaInformation'|trans|ucfirst }}</legend>
      <div class="checkboxTextFieldCombo">
        <checkbox-enable-field
          switch-check
          checkbox-id="{{ form.descriptionOverwrite.vars.id }}"
          checkbox-label="{{ form.descriptionOverwrite.vars.label|trans|capitalize }}"
          checkbox-name="{{ form.descriptionOverwrite.vars.full_name }}"
          field-id="{{ form.description.vars.id }}"
          field-label="{{  form.description.vars.label|trans|capitalize }}"
          field-name="{{ form.description.vars.full_name }}"
          field-help-text="{{  'msg.HelpMetaDescription'|trans|raw }}"
          value-on-load="{{ form.description.vars.value }}"
          {% if form.descriptionOverwrite.vars.checked %} enabled-on-load {% endif %}
        ></checkbox-enable-field>
        {% do form.description.setRendered() %}
        {% do form.descriptionOverwrite.setRendered() %}
      </div>

      <div class="checkboxTextFieldCombo">
        <checkbox-enable-field
          switch-check
          checkbox-id="{{ form.keywordsOverwrite.vars.id }}"
          checkbox-label="{{ form.keywordsOverwrite.vars.label|trans|capitalize }}"
          checkbox-name="{{ form.keywordsOverwrite.vars.full_name }}"
          field-id="{{ form.keywords.vars.id }}"
          field-label="{{  form.keywords.vars.label|trans|capitalize }}"
          field-name="{{ form.keywords.vars.full_name }}"
          field-help-text="{{  'msg.HelpMetaKeywords'|trans|raw }}"
          value-on-load="{{ form.keywords.vars.value }}"
          {% if form.keywordsOverwrite.vars.checked %} enabled-on-load {% endif %}
        ></checkbox-enable-field>
        {% do form.keywords.setRendered() %}
        {% do form.keywordsOverwrite.setRendered() %}
      </div>
      {% if form.custom_meta_tags %}
        <div class="form-group">
          {{ form_label(form.custom) }}
          {{ form_widget(form.custom) }}
          {{ form_errors(form.custom) }}
          <small class="form-text text-muted">{{ 'msg.HelpMetaCustom'|trans|raw }}</small>
        </div>
      {% endif %}
    </fieldset>

    <fieldset>
      <legend>{{ 'lbl.URL'|trans|ucfirst }}</legend>
      <div class="checkboxTextFieldCombo">
        <div class="form-group">
          {{ form_widget(form.urlOverwrite) }}
          {{ form_label(form.url) }}
          <div class="form-inline">
            <span id="urlFirstPart">{{ form.vars.detail_url }}/ </span>{{ form_widget(form.url) }}
          </div>
          {{ form_errors(form.url) }}
          <small class="form-text text-muted">{{ 'msg.HelpMetaURL'|trans|raw }}</small>
        </div>
      </div>
    </fieldset>

    <fieldset class="last">
      <legend>{{ 'lbl.SEO'|trans|ucfirst }}</legend>
      <div class="row">
        <div class="col-md-6">
          <div class="form-group last">
            <label>{{ 'lbl.Index'|trans|ucfirst }}</label>
            {{ form_widget(form.SEOIndex) }}
          </div>
        </div>
        <div class="col-md-6">
          <div class="form-group">
            <label>{{ 'lbl.Follow'|trans|ucfirst }}</label>
            {{ form_widget(form.SEOFollow) }}
          </div>
        </div>
      </div>
    </fieldset>
  </div>
  <input type="hidden" id="{{ customId }}" value="{{ custom_meta_tags ? '1' : '0' }}">
  <input type="hidden" id="{{ classId }}" value="{{ generate_url_callback_class }}">
  <input type="hidden" id="{{ methodId }}" value="{{ generate_url_callback_method }}">
  <input type="hidden" id="{{ parametersId }}" value="{{ generate_url_callback_parameters }}">
  {{ form_rest(form) }}
{%- endblock meta_widget -%}

{% block fork_image_widget %}
  {% spaceless %}
    <div class="row">
      {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
      {% if show_preview or show_remove_image %}
        <div class="form-group{% if show_preview and preview_url %} col-lg-3{% endif %}">
          {% if show_preview and preview_url %}
            <img class="{% if preview_class is defined and preview_class is not empty %}{{ preview_class }}{% endif %}" src="{{ preview_url }}">
          {% endif %}
        </div>
      {% endif %}
      <div class="form-group{% if show_preview and preview_url %} col-lg-9{% endif %}">
        {{ form_widget(form.file) }}
        {% if help_text_message %}
          <div class="form-text text-muted">{{ help_text_message|trans|format(help_text_argument) }}</div>
        {% endif %}
        {{ form_errors(form.file) }}
        {% if show_remove_image %}
          {{ form_widget(form.remove) }}
        {% endif %}
      </div>
    </div>
  {% endspaceless %}
{% endblock %}

{% block fork_file_widget %}
  {% import 'Layout/Templates/macros.html.twig' as macro %}
  {% spaceless %}
    <div class="form-group">
      {{ form_widget(form.file) }}
      {% if help_text_message %}
        <div class="help-text">{{ help_text_message|trans|format(help_text_argument) }}</div>
      {% endif %}
      {{ form_errors(form.file) }}
    </div>
    {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
    {% if show_preview or show_remove_file %}
      <div class="form-group">
        {% if show_preview and preview_url %}
          <a href="{{ preview_url }}" class="btn btn-sm btn-default" target="_blank" rel="noopener noreferrer">
            {{ macro.icon('eye') }}
            {{ preview_label|trans|ucfirst }}
          </a>
        {% endif %}
        {% if show_remove_file %}
          {{ form_widget(form.remove) }}
        {% endif %}
      </div>
    {% endif %}
  {% endspaceless %}
{% endblock %}

{% block bootstrap_collection_row %}
  {% spaceless %}
    {% import 'Layout/Templates/macros.html.twig' as macro %}
    {% if prototype is defined %}
      {% set prototype_vars = {} %}
      {% if style is defined %}
        {% set prototype_vars = prototype_vars|merge({'style': style}) %}
      {% endif %}
      {% set prototype_html = form_widget(prototype, prototype_vars) %}
      {% if form.vars.allow_delete %}
        {% set prototype_html = prototype_html ~ '<div class="btn-toolbar">' %}
        {% if form.vars.allow_sequence %}
          {% set prototype_html = prototype_html ~ '<div class="btn-group pull-left"><span class="btn btn-default fork-data-grid-sortable" data-role="sequence-handle" aria-hidden="true">' ~ macro.icon('reorder') ~ '</span>' ~ macro.buttonIcon('', 'arrow-up', '', 'btn-default', {'type': 'button', 'data-role': 'order-move', 'data-direction': 'up', 'aria-label': 'lbl.MoveUpOnePosition'|trans|ucfirst}) ~ '' ~ macro.buttonIcon('', 'arrow-down', '', 'btn-default', {'type': 'button', 'data-role': 'order-move', 'data-direction': 'down', 'aria-label': 'lbl.MoveDownOnePosition'|trans|ucfirst}) ~ '</div>' %}
        {% endif %}
        {% set prototype_html = prototype_html ~ '<div class="btn-group pull-right"><button class="btn btn-danger btn-sm" data-removefield="collection" data-field="__id__">' ~ form.vars.delete_button_text|trans({}, translation_domain)|ucfirst|raw ~ '</button></div></div>' %}
      {% endif %}

      {% set attr = attr|merge({'data-prototype': prototype_html }) %}
      {% set attr = attr|merge({'data-prototype-name': prototype_name }) %}
    {% endif %}
    <div {{ block('widget_container_attributes') }}>
      <div class="card card-default">
        <div class="card-heading">
          {{ form_label(form) }}
        </div>
        <ul class="list-group js-collection"{% if form.vars.allow_sequence %} data-role="collection-sequence"{% if form.vars.sequence_group %} data-sequence-group="{{ form.vars.sequence_group }}"{% endif %}{% endif %}>
          {% for field in form %}
            <li class="list-group-item">
              {{ form_widget(field) }}
              {{ form_errors(field) }}
              {% if form.vars.allow_delete or form.vars.allow_sequence %}
                <div class="btn-toolbar">
                  {% if form.vars.allow_sequence %}
                    <div class="btn-group pull-left">
                      <span class="btn btn-default fork-data-grid-sortable" data-role="sequence-handle" aria-hidden="true">{{ macro.icon('reorder') }}</span>
                      {{ macro.buttonIcon('', 'arrow-up', '', 'btn-default', {'type': 'button', 'data-role': 'order-move', 'data-direction': 'up', 'aria-label': 'lbl.MoveUpOnePosition'|trans|ucfirst}) }}
                      {{ macro.buttonIcon('', 'arrow-down', '', 'btn-default', {'type': 'button', 'data-role': 'order-move', 'data-direction': 'down', 'aria-label': 'lbl.MoveDownOnePosition'|trans|ucfirst}) }}
                    </div>
                  {% endif %}
                  {% if form.vars.allow_delete %}
                    <div class="btn-group pull-right">
                      <button class="btn btn-danger btn-sm" data-removefield="collection" data-field="{{ field.vars.id }}">{{ form.vars.delete_button_text|trans({}, translation_domain)|ucfirst|raw }}</button>
                    </div>
                  {% endif %}
                </div>
              {% endif %}
            </li>
          {% endfor %}
        </ul>
        <div class="card-footer clearfix">
          {% if form.vars.allow_add %}
            <div class="btn-group pull-right">
              <button class="btn btn-success btn-sm" data-addfield="collection" data-collection="{{ form.vars.id }}" data-prototype-name="{{ prototype_name }}">{{ form.vars.add_button_text|trans({}, translation_domain)|ucfirst|raw }}</button>
            </div>
          {% endif %}
          {{ form_errors(form) }}
        </div>
      </div>
    </div>
  {% endspaceless %}
{% endblock bootstrap_collection_row %}

{% block media_group_row %}
  {{ form_widget(form) }}
{% endblock %}

{% block form_row %}
  <div class="form-group{% if (not compound or force_error|default(false)) and not valid %} has-error{% endif %}">
    {{- form_label(form) -}}
    {{- form_widget(form) -}}
    {% if (not compound or force_error|default(false)) and not valid %}
      {{- form_errors(form) -}}
    {% endif %}
  </div>
{% endblock %}

{% block editor_row %}
  <div class="card form-group card-default card-editor{% if (not compound or force_error|default(false)) and not valid %} card-danger{% endif %}">
    <div class="card-heading">
      {{- form_label(form) -}}
    </div>
    <div class="card-body">
      {{- form_widget(form) -}}
    </div>
    {% if (not compound or force_error|default(false)) and not valid %}
      <div class="card-footer">
        {{- form_errors(form) -}}
      </div>
    {% endif %}
  </div>
{% endblock %}

{% block help %}
  {% for attributeName, attributeValue in attr %}
    {% if attributeName == 'help' %}<small class="form-text text-muted">{{ attributeValue|trans }}</small>{% endif %}
  {% endfor %}
{% endblock %}

{%- block collection_row -%}
  <div class="card card-default">
    <div class="card-heading">
      {{- form_label(form) -}}
    </div>
    <div class="card-body">
      {{- form_widget(form) -}}
    </div>
  </div>
{%- endblock collection_row -%}

{% block title_widget %}
  {{- form_widget(form) -}}
  {% if form.parent.meta is defined %}
    {% set meta = form.parent.meta %}
    {% set slug = meta.children.url.vars.value %}
    <a target="_blank" rel="noopener noreferrer" class="site-url" href="{{ meta.vars.detail_url }}/{{ slug }}">
      {{ SITE_URL }}{{ meta.vars.detail_url }}/<span id="generatedUrl">{{ slug }}</span>
    </a>
  {% endif %}
{% endblock %}

{% block checkbox_switch_widget -%}
  {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) -%}
  <div class="custom-control custom-switch">
    <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />

    {{- form_label(form, null, { widget: checkbox.content }) -}}
  </div>
{%- endblock %}

{%- block choice_widget_collapsed -%}
  {%- if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) -%}
    {% set required = false %}
  {%- endif -%}
  <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %} class="custom-select">
    {%- if placeholder is not none -%}
      <option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}</option>
    {%- endif -%}
    {%- if preferred_choices|length > 0 -%}
      {% set options = preferred_choices %}
      {{- block('choice_widget_options') -}}
      {%- if choices|length > 0 and separator is not none -%}
        <option disabled="disabled">{{ separator }}</option>
      {%- endif -%}
    {%- endif -%}
    {%- set options = choices -%}
    {{- block('choice_widget_options') -}}
  </select>
{%- endblock choice_widget_collapsed -%}

{% block tags_widget -%}
  {{ form_widget(form) }}
  <small class="form-text text-muted" id="tags-info">{{ 'msg.HelpTextTags'|trans }}</small>
{%- endblock %}

{% block checkbox_widget -%}
  {%- set parent_label_class = parent_label_class|default(label_attr.class|default('')) -%}
  {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) -%}
  <div class="custom-control custom-checkbox{{ 'checkbox-inline' in parent_label_class ? ' custom-control-inline' }}">
    {{- form_label(form, null, { widget: block('fork_custom_checkbox_widget'), label_attr: {'class': 'custom-control-label'} }) -}}
  </div>
{%- endblock checkbox_widget %}

{% block fork_custom_checkbox_widget %}
  {% set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) %}
  <input type="checkbox" {% with { attr: attr} %}{{ block('widget_attributes') }}{% endwith %}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
{% endblock fork_custom_checkbox_widget %}
