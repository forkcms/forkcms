#!/usr/bin/env php
<?php

use App\Kernel;
use ForkCMS\Backend\Init as BackendInit;
use ForkCMS\Common\ModulesSettings;
use ForkCMS\Component\Model\BaseModel;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;
use Symfony\Component\Dotenv\Dotenv;

// if you don't want to setup permissions the proper way, just uncomment the following PHP line
// read http://symfony.com/doc/current/book/installation.html#configuration-and-setup for more information
//umask(0000);

set_time_limit(0);

// @ForkCMS: we changed the default from '/../vendor/autoload.php` to the following just to make Spoon work
require __DIR__.'/../autoload.php';

if (!class_exists(Application::class)) {
    throw new \RuntimeException('You need to add "symfony/framework-bundle" as a Composer dependency.');
}

if (!isset($_SERVER['APP_ENV'])) {
    if (!class_exists(Dotenv::class)) {
        throw new \RuntimeException('APP_ENV environment variable is not defined. You need to define environment variables for configuration or add "symfony/dotenv" as a Composer dependency to load variables from a .env file.');
    }
    (new Dotenv())->load(__DIR__.'/../.env');
}

$input = new ArgvInput();
$env = $input->getParameterOption(['--env', '-e'], $_SERVER['APP_ENV'] ?? 'dev');
$debug = ($_SERVER['APP_DEBUG'] ?? ('prod' !== $env)) && !$input->hasParameterOption(['--no-debug', '']);

// @ForkCMS: Fork has not yet been installed
$parametersFile = __DIR__ . '/../config/parameters.yaml';
if (!file_exists($parametersFile)) {
    $env = 'install';
}

if ($debug) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

$kernel = new Kernel($env, $debug);

// @ForkCMS: make our container available statically. This is needed to make our static models work
BaseModel::setContainer($kernel->getContainer());

// @ForkCMS
define('APPLICATION', 'Console');
$backend = new BackendInit($kernel);
$backend->initialize('Console');

$application = new Application($kernel);

// @ForkCMS: add our core console commands
$application->add(new \ForkCMS\Console\Locale\ImportLocaleCommand());
$application->add(new \ForkCMS\Console\Thumbnails\GenerateThumbnailsCommand());
if ($kernel->getContainer()->get('fork.settings') instanceof ModulesSettings) {
    $application->add(
        new \ForkCMS\Console\Locale\EnableLocaleCommand(
            $kernel->getContainer()->get('fork.settings'),
            $kernel->getContainer()->getParameter('installed_modules'),
            $kernel->getContainer()->getParameter('site.multilanguage')
        )
    );
}

$application->run($input);
